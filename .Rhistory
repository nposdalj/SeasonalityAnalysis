SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
View(SexDayTable)
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
View(SexDayTable)
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
View(SexDayTable)
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2 & SexDayTable$FJM == 3), 0) #delete rows that don't have both sexes
View(SexDayTable)
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2 & SexDayTable$FJM == 1), 0) #delete rows that don't have both sexes
View(SexDayTable)
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
View(SexDayTable)
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$JM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM == 2), 1) #only keep rows that have both sexes and make it equal to 1
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM == 2), 1) #only keep rows that have both sexes and make it equal to 1
View(SexDayTable)
SexDayTable$F = replace(SexDayTable$F, which(SexDayTable$FJ ==1 | SexDayTable$FJM ==1 | SexDayTable$FM ==1),0) #delete F only rows when it's being accounted for in another group
View(SexDayTable)
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$F = replace(SexDayTable$F, which(SexDayTable$FJ ==1 | SexDayTable$FJM ==1 | SexDayTable$FM ==1),0) #delete F only rows when it's being accounted for in another group
SexDayTable$J = replace(SexDayTable$J, which(SexDayTable$FJ ==1 | SexDayTable$JM ==1 | SexDayTable$FJM ==1),0) #delete J only rows when it's being accounted for in another group
SexDayTable$M = replace(SexDayTable$M, which(SexDayTable$JM ==1 | SexDayTable$FM ==1 | SexDayTable$FJM ==1),0)
saveDir = paste(GDrive,":/My Drive/Manuscripts/GOA/Figures",sep="")
#Site Names
SiteNames = c('CB','PT','QN','BD','AB','KOA','KS')
#loop through each site and pull out relevant data
for (i in 1:length(SiteNames)){
site = SiteNames[i]
SiteDayTable = dplyr::filter(SexDayTable, grepl(site,Site))
#Find Total Days and Days with Presence in General
TotalDays = nrow(SiteDayTable)
PresentDays = apply(SiteDayTable,2,function(x) sum(x > 0))
if (i == 1){
SumTable = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
}else{
SumTableTemp = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
SumTable = rbind(SumTable, SumTableTemp)
}
#Find Ratio of F/M/J Days
if (i == 1){
SiteRatio = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatio = sum(SiteRatio)
SiteRatioPercent = round((SiteRatio/SuMSiteRatio) * 100)
SiteRatioPercent = list(SiteRatioPercent)
}else{
SiteRatioTemp = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatioTEMP = sum(SiteRatioTemp)
SiteRatioPercentTEMP = ceiling((SiteRatioTemp/SuMSiteRatioTEMP) * 100)
SiteRatioPercent = append(SiteRatioPercent,list(SiteRatioPercentTEMP))
}
}
View(SiteRatioPercent)
i = 1
site = SiteNames[i]
SiteDayTable = dplyr::filter(SexDayTable, grepl(site,Site))
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
SiteDayTable2 = dplyr::filter(SexDayTable, grepl(site,Site))
sum(SiteDayTable2$PreAbsF)
sum(SiteDayTable$F)
sum(SiteDayTable$FJM)
sum(SiteDayTable$FJ)
sum(SiteDayTable$FM)
3+15+11+2
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$F = replace(SexDayTable$F, which(SexDayTable$FJ ==1 | SexDayTable$FJM ==1 | SexDayTable$FM ==1),0) #delete F only rows when it's being accounted for in another group
SexDayTable$J = replace(SexDayTable$J, which(SexDayTable$FJ ==1 | SexDayTable$JM ==1 | SexDayTable$FJM ==1),0) #delete J only rows when it's being accounted for in another group
SexDayTable$M = replace(SexDayTable$M, which(SexDayTable$JM ==1 | SexDayTable$FM ==1 | SexDayTable$FJM ==1),0) #delete M only rows when it's being accounted for in another group
saveDir = paste(GDrive,":/My Drive/Manuscripts/GOA/Figures",sep="")
#Site Names
SiteNames = c('CB','PT','QN','BD','AB','KOA','KS')
#loop through each site and pull out relevant data
for (i in 1:length(SiteNames)){
site = SiteNames[i]
SiteDayTable = dplyr::filter(SexDayTable, grepl(site,Site))
#Find Total Days and Days with Presence in General
TotalDays = nrow(SiteDayTable)
PresentDays = apply(SiteDayTable,2,function(x) sum(x > 0))
if (i == 1){
SumTable = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
}else{
SumTableTemp = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
SumTable = rbind(SumTable, SumTableTemp)
}
#Find Ratio of F/M/J Days
if (i == 1){
SiteRatio = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatio = sum(SiteRatio)
SiteRatioPercent = round((SiteRatio/SuMSiteRatio) * 100)
SiteRatioPercent = list(SiteRatioPercent)
}else{
SiteRatioTemp = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatioTEMP = sum(SiteRatioTemp)
SiteRatioPercentTEMP = ceiling((SiteRatioTemp/SuMSiteRatioTEMP) * 100)
SiteRatioPercent = append(SiteRatioPercent,list(SiteRatioPercentTEMP))
}
}
i = 1
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 1
site = SiteNames[i]
SiteDayTable = dplyr::filter(SexDayTable, grepl(site,Site))
#Find Total Days and Days with Presence in General
TotalDays = nrow(SiteDayTable)
PresentDays = apply(SiteDayTable,2,function(x) sum(x > 0))
if (i == 1){
SumTable = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
}else{
SumTableTemp = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
SumTable = rbind(SumTable, SumTableTemp)
}
#Find Ratio of F/M/J Days
if (i == 1){
SiteRatio = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatio = sum(SiteRatio)
SiteRatioPercent = round((SiteRatio/SuMSiteRatio) * 100)
SiteRatioPercent = list(SiteRatioPercent)
}else{
SiteRatioTemp = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatioTEMP = sum(SiteRatioTemp)
SiteRatioPercentTEMP = ceiling((SiteRatioTemp/SuMSiteRatioTEMP) * 100)
SiteRatioPercent = append(SiteRatioPercent,list(SiteRatioPercentTEMP))
}
SiteRatioPercent
View(SiteDayTable)
sum(SiteDayTable$PreAbsF)
sum(SexDayTable$PreAbsF)
sum(SiteDayTable$F)
sum(SiteDayTable$FJ)
SumTable
SiteRatio
SiteRatioPercent
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$F = replace(SexDayTable$F, which(SexDayTable$FJ ==1 | SexDayTable$FJM ==1 | SexDayTable$FM ==1),0) #delete F only rows when it's being accounted for in another group
SexDayTable$J = replace(SexDayTable$J, which(SexDayTable$FJ ==1 | SexDayTable$JM ==1 | SexDayTable$FJM ==1),0) #delete J only rows when it's being accounted for in another group
SexDayTable$M = replace(SexDayTable$M, which(SexDayTable$JM ==1 | SexDayTable$FM ==1 | SexDayTable$FJM ==1),0) #delete M only rows when it's being accounted for in another group
saveDir = paste(GDrive,":/My Drive/Manuscripts/GOA/Figures",sep="")
#Site Names
SiteNames = c('CB','PT','QN','BD','AB','KOA','KS')
#loop through each site and pull out relevant data
for (i in 1:length(SiteNames)){
site = SiteNames[i]
SiteDayTable = dplyr::filter(SexDayTable, grepl(site,Site))
#Find Total Days and Days with Presence in General
TotalDays = nrow(SiteDayTable)
PresentDays = apply(SiteDayTable,2,function(x) sum(x > 0))
if (i == 1){
SumTable = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
}else{
SumTableTemp = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
SumTable = rbind(SumTable, SumTableTemp)
}
#Find Ratio of F/M/J Days
if (i == 1){
SiteRatio = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatio = sum(SiteRatio)
SiteRatioPercent = cieling((SiteRatio/SuMSiteRatio) * 100)
SiteRatioPercent = list(SiteRatioPercent)
}else{
SiteRatioTemp = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatioTEMP = sum(SiteRatioTemp)
SiteRatioPercentTEMP = ceiling((SiteRatioTemp/SuMSiteRatioTEMP) * 100)
SiteRatioPercent = append(SiteRatioPercent,list(SiteRatioPercentTEMP))
}
}
#Load libraries
library("eulerr")
library("tidyverse")
library("dplyr")
#load data
GDrive =  'I'
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/All_Sites",sep="")
#General Data
fileName1 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW.csv",sep="")#setting the directory
DayTable = read.csv(fileName1) #no effort days deleted
DayTable = na.omit(DayTable)
DayTable$tbin = as.Date(DayTable$tbin)
#Sex Specific Data
fileName2 = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/BigModel/AllSitesGrouped_GAMGEE_ROW_sexClasses.csv",sep="")#setting the directory
SexDayTable = read.csv(fileName2) #no effort days deleted
SexDayTable = na.omit(SexDayTable)
SexDayTable$tbin = as.Date(SexDayTable$tbin)
#Make new columns to find ratio
SexDayTable$F = SexDayTable$PreAbsF
SexDayTable$J = SexDayTable$PreAbsJ
SexDayTable$M = SexDayTable$PreAbsM
SexDayTable$FJ = SexDayTable$F + SexDayTable$J
SexDayTable$JM = SexDayTable$M + SexDayTable$J
SexDayTable$FM = SexDayTable$F + SexDayTable$M
SexDayTable$FJM = SexDayTable$F + SexDayTable$J + SexDayTable$M
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM <3 ), 0) #delete rows that don't have all sexes
SexDayTable$FJM = replace(SexDayTable$FJM, which(SexDayTable$FJM == 3), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ <2), 0) #delete rows that don't have both sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FJ = replace(SexDayTable$FJ, which(SexDayTable$FJ == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$JM = replace(SexDayTable$JM, which(SexDayTable$JM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM <2 ), 0) #delete rows that don't have both sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FJM == 1), 0) #delete rows that have all sexes
SexDayTable$FM = replace(SexDayTable$FM, which(SexDayTable$FM == 2), 1) #only keep rows that have both sexes and make it equal to 1
SexDayTable$F = replace(SexDayTable$F, which(SexDayTable$FJ ==1 | SexDayTable$FJM ==1 | SexDayTable$FM ==1),0) #delete F only rows when it's being accounted for in another group
SexDayTable$J = replace(SexDayTable$J, which(SexDayTable$FJ ==1 | SexDayTable$JM ==1 | SexDayTable$FJM ==1),0) #delete J only rows when it's being accounted for in another group
SexDayTable$M = replace(SexDayTable$M, which(SexDayTable$JM ==1 | SexDayTable$FM ==1 | SexDayTable$FJM ==1),0) #delete M only rows when it's being accounted for in another group
saveDir = paste(GDrive,":/My Drive/Manuscripts/GOA/Figures",sep="")
#Site Names
SiteNames = c('CB','PT','QN','BD','AB','KOA','KS')
#loop through each site and pull out relevant data
for (i in 1:length(SiteNames)){
site = SiteNames[i]
SiteDayTable = dplyr::filter(SexDayTable, grepl(site,Site))
#Find Total Days and Days with Presence in General
TotalDays = nrow(SiteDayTable)
PresentDays = apply(SiteDayTable,2,function(x) sum(x > 0))
if (i == 1){
SumTable = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
}else{
SumTableTemp = data.frame("site" = site, "TotalDays" = TotalDays, "PresentDays" = PresentDays[10])
SumTable = rbind(SumTable, SumTableTemp)
}
#Find Ratio of F/M/J Days
if (i == 1){
SiteRatio = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatio = sum(SiteRatio)
SiteRatioPercent = ceiling((SiteRatio/SuMSiteRatio) * 100)
SiteRatioPercent = list(SiteRatioPercent)
}else{
SiteRatioTemp = c(F = sum(SiteDayTable$F), J = sum(SiteDayTable$J), M = sum(SiteDayTable$M), "F&J" = sum(SiteDayTable$FJ),
"F&M" = sum(SiteDayTable$FM), "J&M" = sum(SiteDayTable$JM), "F&J&M" = sum(SiteDayTable$FJM))
SuMSiteRatioTEMP = sum(SiteRatioTemp)
SiteRatioPercentTEMP = ceiling((SiteRatioTemp/SuMSiteRatioTEMP) * 100)
SiteRatioPercent = append(SiteRatioPercent,list(SiteRatioPercentTEMP))
}
}
i =1
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 2
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 3
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 3
i = 4
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 5
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 6
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
i = 7
site = SiteNames[i]
title = paste(saveDir,"/PropVenn", site,".pdf",sep="")
pdf(title)
plot(euler(SiteRatioPercent[[i]]),fills = c('#66c2a5','#fc8d62','#8da0cb'), labels = FALSE, quantities = list(cex=3),
main = paste("Proportional Venn Diagram for ",site,sep = ""))
print(paste('Plot for ',site,' Saved',sep=""))
dev.off()
